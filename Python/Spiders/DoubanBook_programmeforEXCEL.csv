1,代码整洁之道,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/34986245/,"
内容简介:
软件质量，不但依赖架构及项目管理，而且与代码质量紧密相关。这一点，无论是敏捷开发流派还是传统开发流派，都不得不承认。本书提出一种观点：代码质量与其整洁度成正比。干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好基础。作为编程领域的佼佼者，本书作者给出了一系列行之有效的整洁代码操作实践。这些实践在本书中体现为一条条规则（或称“启示”），并辅以来自实际项目的正、反两面的范例。只要遵循这些规则，就能编写出干净的代码，从而有效提升代码质量。 本书阅读对象为一切有志于改善代码质量的程序员及技术经理。书中介绍的规则均来自作者多年的实践经验，涵盖从命名到重构的多个编程方面，虽为一“家”之言，然诚有可资借鉴的价值。"
2,匠艺整洁之道：程序员的职业修养,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35879791/,"
内容简介:
鲍勃大叔因在技术人群中声名远播的Clean系列在全球圈粉无数。本书为其烫手新作，旨在为广大工程师指明一条通向匠师之路，包括饱经洗砺的敏捷技术实践，如何通过持续的努力提高专业素养，软件可用之上的目标与技能，以及如何激发团队最大潜能，等等。本书融会几本经典著作的精髓，将“整洁”方法论推向至高境界―软件开发者有责任维护世界正常运行，而“人”才是“技术”的决定者。 《匠艺整洁之道：程序员的职业修养》共分三部分，前两部分用实例阐释TDD在敏捷软件中的运用，以及验收测试、协同编程等常被忽视的敏捷侧面与具体策略，还探讨了颇有价值的软件设计方案相关话题；第Ⅲ部分拔地而起，直接提出十条堪称金玉良言的“规劝”，以帮助程序员成为团队基石。 《匠艺整洁之道：程序员的职业修养》适合所有软件开发者、测试工程师及工程类院校师生，对技术团队负责人及架构师同样大有助益。"
3,Python编程:从入门到实践（第2版）,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35196328/,"
内容简介:
本书是针对所有层次Python读者而作的Python入门书。全书分两部分：第一部分介绍用Python编程所必须了解的基本概念，包括Matplotlib等强大的Python库和工具，以及列表、字典、if语句、类、文件与异常、代码测试等内容；第二部分将理论付诸实践，讲解如何开发三个项目，包括简单的2D游戏、利用数据生成交互式的信息图以及创建和定制简单的Web应用，并帮助读者解决常见编程问题和困惑。第2版进行了全面修订，简化了Python安装流程，新增了f字符串、get()方法等内容，并且在项目中使用了Plotly库以及新版本的Django和Bootstrap，等等。"
4,Vue.js设计与实现,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35768338/,"
内容简介:
本书基于Vue.js 3，从规范出发，以源码为基础，并结合大量直观的配图，循序渐进地讲解Vue.js中各个功能模块的实现，细致剖析框架设计原理。全书共18章，分为六篇，主要内容包括：框架设计概览、响应系统、渲染器、组件化、编译器和服务端渲染等。通过阅读本书，对Vue.js 2/3具有上手经验的开发人员能够进一步理解Vue.js框架的实现细节，没有Vue.js使用经验但对框架设计感兴趣的前端开发人员，能够快速掌握Vue.js的设计原理。"
5,程序员修炼之道（第2版）:通向务实的最高境界,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35006892/,"
内容简介:
本书之所以在全球范围内广泛传播，被一代代开发者奉为圭臬，盖因它可以创造出真正的价值：或编写出更好的软件，或探究出编程的本质，而所有收获均不依赖于特定语言、框架和方法。时隔20年的新版，经过全面的重新选材、组织和编写，覆盖哲学、方法、工具、设计、解耦、并发、重构、需求、团队等务实话题的最佳实践及重大陷阱，以及易于改造、复用的架构技术。本书极具洞察力与趣味性，适合从初学者到架构师的各阶层读者潜心研读或增广见闻。"
6,Python工匠:案例、技巧与工程实践,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35723705/,"
内容简介:
◎ 编辑推荐 ☆本书基于作者的开源GitHub图书，广受读者喜爱，市面上难得的原创Python进阶图书。 ☆写作方式别具一格，核心知识点通过三大板块来阐述：基础知识、案例故事、编程建议。 其中基础知识帮助大家快速回顾Python基础；案例故事由作者经历的编程项目与案 例改编而来，兼具实战性与趣味性；编程建议以大家喜闻乐见的条目式知识点呈现，短小精悍，可直接应用于自己的编程实践中。 ◎ 内容简介 本书基于广受好评的“Python工匠”系列开源文章。 全书从工程实践角度出发，通过剖析核心知识、展示典型案例与总结实用技巧，帮助大家系统进阶Python，写好工程代码，做好实践项目。 本书共计13章，分为五大部分：变量与基础类型、语法结构、函数与装饰器、面向对象编程、总结与延伸，涵盖Python编程的方方面面。"
7,SoftwareEngineeringatGoogle:LessonsLearnedfromProgrammingOverTime,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/34875994/,"
内容简介:
The approach to and understanding of software engineering at Google is unlike any other company. With this book, you’ll get a candid and insightful look at how software is constructed and maintained by some of the world’s leading practitioners. Titus Winters, Tom Manshreck, and Hyrum K. Wright, software engineers and a technical writer at Google, reframe how software engineerin...(展开全部)"
8,微服务架构设计模式,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/33425123/,"
内容简介:
成功地开发基于微服务架构的应用软件，需要掌握一系列全新的架构思想和实践。在这本独特的书籍中，微服务架构的先驱、Java 开发者社区的意见领袖 Chris Richardson 收集、分类并解释了 44 个架构设计模式，这些模式用来解决诸如服务拆分、事务管理、查询和跨服务通信等难题。 本书将教会你如何开发和部署生产级别的微服务架构应用。这套宝贵的架构设计模式建立在数十年的分布式系统经验之上，Chris 还为开发服务添加了新的模式，并将它们组合成可在真实条件下可靠地扩展和执行的系统。本书不仅仅是一个模式目录，还提供了经验驱动的建议，以帮助你设计、实现、测试和部署基于微服务的应用程序。 本书包含： 如何（以及为什么）使用微服务架构 服务拆分的策略 事务管理和查询相关的模式 高效的测试策略 包括容器和 Serverless 在内的部署模式 本书专为熟悉标准企...(展开全部)"
9,Scratch趣味编程：孩子的第一本编程启蒙书小甲鱼系列:小甲鱼系列,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35029210/,"
内容简介:"
10,C程序设计语言（第2版・新版）,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/1139336/,"
内容简介:
在计算机发展的历史上，没有哪一种程序设计语言像C语言这样应用广泛。本书作者是C语言的设计者之一Dennis M. Ritchie和著名计算机科学家Brian W. Kernighan合著的一本介绍C语言的权威经典著作。我们现在见到的大量论述C语言程序设计的教材和专著均以此书为蓝本。 原著第1版中介绍的C语言成为后来广泛使用的C语言版本――标准C的基础。人们熟知的“hello,World""程序就是由本书首次引入的，现在，这一程序已经成为众多程序设计语言入门的第一课。原著第2版根据1987年制定的ANSIC标准做了适当的修订．引入了最新的语言形式，并增加了新的示例，通过简洁的描述、典型的示例，作者全面、系统、准确地讲述了C语言的各个特性以及程序设计的基本方法。 对于计算机从业人员来说，本书是一本必读的程序设计语言方面的参考书。"
11,编程珠玑,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/3227098/,"
内容简介:
本书是计算机科学方面的经典名著。书的内容围绕程序设计人员面对的一系列实际问题展开。作者Jon Bentley 以其独有的洞察力和创造力，引导读者理解这些问题并学会解决方法，而这些正是程序员实际编程生涯中至关重要的。本书的特色是通过一些精心设计的有趣而又颇具指导意义的程序，对实用程序设计技巧及基本设计原则进行了透彻而睿智的描述，为复杂的编程问题提供了清晰而完备的解决思路。本书对各个层次的程序员都具有很高的阅读价值。. 多年以来，当程序员们推选出最心爱的计算机图书时，《编程珠玑》总是位列前列。正如自然界里珍珠出自细沙对牡蛎的磨砺，计算机科学大师Jon Bentley以其独有的洞察力和创造力，从磨砺程序员的实际问题中凝结出一篇篇不朽的编程“珠玑”，成为世界计算机界名刊《ACM通讯》历史上最受欢迎的专栏，最终结集为两部不朽的计算机科学经典名著，影响和激励着一...(展开全部)"
12,程序员的自我修养:链接、装载与库,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/3652388/,"
内容简介:
这本书主要介绍系统软件的运行机制和原理，涉及在Windows和Linux两个系统平台上，一个应用程序在编译、链接和运行时刻所发生的各种事项，包括：代码指令是如何保存的，库文件如何与应用程序代码静态链接，应用程序如何被装载到内存中并开始运行，动态链接如何实现，C/C++运行库的工作原理，以及操作系统提供的系统服务是如何被调用的。每个技术专题都配备了大量图、表和代码实例，力求将复杂的机制以简洁的形式表达出来。本书最后还提供了一个小巧且跨平台的C/C++运行库MiniCRT，综合展示了与运行库相关的各种技术。 对装载、链接和库进行了深入浅出的剖析，并且辅以大量的例子和图表，可以作为计算机软件专业和其他相关专业大学本科高年级学生深入学习系统软件的参考书。同时，还可作为各行业从事软件开发的工程师、研究人员以及其他对系统软件实现机制和技术感兴趣者的自学教材。"
13,凤凰架构:构建可靠的大型分布式系统,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35492898/,"
内容简介:
这是一本从架构视角讲解如何构建大型分布式系统的著作，是超级畅销书《深入理解Java虚拟机》的作者周志明多年架构和研发经验的总结，得到了多位行业资深架构专家的联袂推荐。 全书共16章，分为演进中的架构、架构师的视角、分布式的基石、不可变基础设施和技术方法论五部分。 第一部分 演进中的架构（第1章） 着重介绍了软件开发历史中多种主流架构风格出现的契机、解决的问题以及带来的新缺陷。 第二部分 架构师的视角（第2~5章） 总结了一名架构师应该在架构设计时思考哪些问题，有哪些主流的解决方案和行业标准做法，各种方案有什么优缺点，不同的解决方法会带来什么不同的影响，等等。 第三部分 分布式的基石（第6~10章） 重点讨论了“不同架构风格是应该在技术规范上统一，还是由应用系统自行解决”这个问题，给出了解决思路、方法和常见工具。 第四部分 不可变基础设施（第11~15...(展开全部)"
14,Go语言精进之路:从新手到高手的编程思想、方法和技巧1,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35720728/,"
内容简介:
Go入门容易，精进难，如何才能像Go开发团队那样写出符合Go思维和语言惯例的高质量代码呢？ 本书将从编程思维和实践技巧2个维度给出答案，帮助你在Go进阶的路上事半功倍。 编程思维层面 只有真正领悟了一门语言的设计哲学和编程思维，并能将之用于实践，才算精通了这门语言。本书从Go语言设计者的视角对Go背后的设计哲学和编程思想进行了梳理和分析，指引读者体会那些看似随意实则经过深思熟虑的设计背后的秘密。 实践技巧层面 实践技巧源于对Go开发团队和Go社区开发的高质量代码的阅读、挖掘和归纳，从项目结构、代码风格、语法及其实现、接口、并发、同步、错误与异常处理、测试与调试、性能优化、标准库、第三方库、工具链、Z佳实践、工程实践等多个方面给出了改善Go代码质量、写出符合 Go 思维和惯例的代码的有效实践。 全书的内容覆盖如下10个大类，共66个主题，字字珠玑，句句...(展开全部)"
15,OnJava中文版基础卷:《Java编程思想》作者新作,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35751619/,"
内容简介:
本书是布鲁斯 ? 埃克尔时隔 15 年，继 Thinking in Java 之后又一力作，基于 Java 的 3 个长期支持版（Java 8、11、17），讲解 Java 核心语法，并对 Java 的核心变化进行详述。全书内容通俗易懂，配合示例讲解逐步深入，并结合实际开发需要，从语言底层设计出发，有效帮读者规避一些常见的开发陷阱。 主体部分共 22 章，内容包含对象、操作符、控制流、初始化和清理、复用、多态、接口、内部类、集合、函数式编程、流、异常、代码校验、文件、字符串、泛型等。 本书适合各个层次的 Java 开发者阅读，同时也可作为面向对象程序设计语言以及 Java 语言的参考教材。"
16,C++Primer中文版（第5版）,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/25708312/,"
内容简介:
这本久负盛名的 C++ 经典教程，时隔八年之久，终迎来史无前例的重大升级。除令全球无数程序员从中受益，甚至为之迷醉的――C++ 大师 Stanley B. Lippman 的丰富实践经验，C++标准委员会原负责人 Josée Lajoie 对C++标准的深入理解，以及C+ + 先驱 Barbara E. Moo 在 C++教学方面的真知灼见外，更是基于全新的 C++11标准进行了全面而彻底的内容更新。非常难能可贵的是，本书所有示例均全部采用 C++11 标准改写，这在经典升级版中极其罕见――充分体现了 C++ 语言的重大进展及其全面实践。书中丰富的教学辅助内容、醒目的知识点提示，以及精心组织的编程示范，让这本书在 C++ 领域的权威地位更加不可动摇。无论是初学者入门，或是中、高级程序员提升，本书均为不容置疑的首选。"
17,深入理解计算机系统（原书第3版）,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/26912767/,"
内容简介:
和第2版相比，本版内容上*大的变化是，从以IA32和x86-64为基础转变为完全以x86-64为基础。主要更新如下： 基于x86-64，大量地重写代码，首次介绍对处理浮点数据的程序的机器级支持。 处理器体系结构修改为支持64位字和操作的设计。 引入更多的功能单元和更复杂的控制逻辑，使基于程序数据流表示的程序性能模型预测更加可靠。 扩充关于用GOT和PLT创建与位置无关代码的讨论，描述了更加强大的链接技术（比如库打桩）。 增加了对信号处理程序更细致的描述，包括异步信号安全的函数等。 采用新函数，更新了与协议无关和线程安全的网络编程。"
18,Java编程思想（第4版）,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/2130190/,"
内容简介:
本书赢得了全球程序员的广泛赞誉，即使是最晦涩的概念，在Bruce Eckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从Java的基础语法到最高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。 从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对C、C++以及Java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、Java I/O系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了Java语言基础语法以及高级特性，适合各个层次的Java程序员阅读，同时也是高等院校讲授...(展开全部)"
19,重构（第2版）:改善既有代码的设计,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/30468597/,"
内容简介:
本书是经典著作《重构》出版20年后的更新版。书中清晰揭示了重构的过程，解释了重构的原理和实践方式，并给出了何时以及何地应该开始挖掘代码以求改善。书中给出了60多个可行的重构，每个重构都介绍了一种经过验证的代码变换手法的动机和技术。本书提出的重构准则将帮助开发人员一次一小步地修改代码，从而减少了开发过程中的风险。 本书适合软件开发人员、项目管理人员等阅读，也可作为高等院校计算机及相关专业师生的参考读物。"
20,程序员数学:用Python学透线性代数和微积分,[美]保罗・奥兰德, 图灵|人民邮电出版社 ,https://book.douban.com/subject/35689348/,"
内容简介:
数学拥有无穷的力量。它既帮助游戏开发工程师建模物理世界，也帮助量化金融分析师赚取利润，还帮助音频处理工程师制作音乐。在数据科学和机器学习领域，数学知识更是不可或缺的。 有人热爱数学，将它比作诗歌，为之着迷一生；有人很难领会数学的妙处，受困于“数学焦虑症”。本书正是为了帮助程序员消除这种焦虑，用自己熟悉的工具，即代码，重新发现数学之美。 ◎ 编辑推荐 本书以图文结合的方式帮助你用Python代码解决程序设计中的数学问题。通过边学边练，你会发现线性代数和微积分的重要概念跃然纸上、印在脑中。 ◇ 向量几何和计算机图形 ◇ 矩阵和线性变换 ◇ 微积分的核心概念 ◇ 仿真和优化 ◇ 图像处理和音频处理 ◇ 用于回归和分类的机器学习算法 ◎ 内容简介 代码和数学是相知相惜的好伙伴，它们基于共同的理性思维，数学公式的推导可以自然地在编写代码的过程中展开。 本书带领...(展开全部)"
